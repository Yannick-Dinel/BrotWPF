<Window x:Class="HRDCCalendar.Extras.Mandelbrot.MandelWindow"
        Name="MandelPlayground"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d" Deactivated="MandelPlayground_Deactivated"
        Title="Mandelbrot's Playground" MinHeight="600" MinWidth="800" Height="600" Width="800">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="MandelProgressTaskbar"/>
    </Window.TaskbarItemInfo>
    <DockPanel>
        <DockPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid Height="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition MinWidth="75" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem Grid.Column="0">
                    <TextBlock VerticalAlignment="Center">Iterations:</TextBlock>
                </StatusBarItem>
                <StatusBarItem Grid.Column="1" HorizontalContentAlignment="Stretch">
                    <TextBox VerticalContentAlignment="Center" HorizontalContentAlignment="Right"
                             Name="MandelIterCount" Height="25" Text="0" IsReadOnly="True"/>
                </StatusBarItem>
                <Separator Grid.Column="2"/>
                <StatusBarItem Grid.Column="3">
                    <ProgressBar Name="MandelProgress" Width="100" Height="20"/>
                </StatusBarItem>
                <StatusBarItem Grid.Column="5">
                    <ToggleButton Name="SetDisplayPopupButton" Click="SetDisplayPopupButton_Click"
                                  Width="60" Height="25" Content="Display"
                                  IsChecked="{Binding ElementName=SetDisplayPopup, Path=IsOpen, Mode=OneWay}"/>
                </StatusBarItem>
                <StatusBarItem Grid.Column="6">
                    <ToggleButton Name="SetFunctionPopupButton" Click="SetFunctionPopupButton_Click"
                                  Width="60" Height="25" Content="Function"
                                  IsChecked="{Binding ElementName=SetFunctionPopup, Path=IsOpen, Mode=OneWay}"/>
                </StatusBarItem>
                <StatusBarItem Grid.Column="7">
                    <ToggleButton Name="SetPositionPopupButton" Click="SetPositionPopupButton_Click"
                                  Width="60" Height="25" Content="Position"
                                  IsChecked="{Binding ElementName=SetPositionPopup, Path=IsOpen, Mode=OneWay}"/>
                </StatusBarItem>
                <Separator Grid.Column="8"/>
                <StatusBarItem Grid.Column="9">
                    <Button Name="IterByButton" Click="IterByButton_Click" IsDefault="True"
                            Width="80" Height="25" Content="Iterate by"/>
                </StatusBarItem>
                <StatusBarItem Grid.Column="10">
                    <xctk:IntegerUpDown Name="IterUpDown" Value="1" Minimum="1" Width="60" Height="25"/>
                </StatusBarItem>
                <StatusBarItem Grid.Column="11">
                    <Button Name="SetIterButton" Click="SetIterButton_Click"
                            Width="80" Height="25" Content="Set Iterations"/>
                </StatusBarItem>
                <Separator Grid.Column="12"/>
                <StatusBarItem Grid.Column="13">
                    <ToggleButton Name="SaveLoadButton" Click="SaveLoadButton_Click" Width="80" Height="25" Content="Save / Load"
                                  IsChecked="{Binding ElementName=SaveLoadPopup, Path=IsOpen, Mode=OneWay}"/>
                </StatusBarItem>
                <Popup Name="SetDisplayPopup" StaysOpen="True" PopupAnimation="Scroll"
                       Placement="Top" PlacementTarget="{Binding ElementName=SetDisplayPopupButton}">
                    <Border BorderBrush="Gray" BorderThickness="1" Width="400">
                        <DockPanel Background="AliceBlue">
                            <Grid Margin="5" Grid.IsSharedSizeScope="True" VerticalAlignment="Center">
                                <Grid.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="BOI2"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition SharedSizeGroup="BOI2"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35" SharedSizeGroup="YOMANYO2"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO2"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO2"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO2"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO2"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO2"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO2"/>
                                </Grid.RowDefinitions>
                                <Label Content="Color Palette:" Grid.Row="0" Grid.Column="0"/>
                                <Label Content="Color Function:" Grid.Row="1" Grid.Column="0"/>
                                <Label Content="Pixels X:" Grid.Row="2" Grid.Column="0"/>
                                <Label Content="Pixels Y:" Grid.Row="3" Grid.Column="0"/>
                                <Label Content="'n' Value:" Grid.Row="2" Grid.Column="2"/>
                                <Label Content="Palette Offset:" Grid.Row="3" Grid.Column="2"/>
                                <Label Content="Smoothing Iterations:" Grid.Row="4" Grid.Column="2"/>
                                <Label Content="Interpolation Period:" Grid.Row="5" Grid.Column="2"/>
                                <ComboBox Name="MandelColorPaletteComboBox" Margin="5" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3"
                                          ItemsSource="{Binding ElementName=MandelPlayground, Path=MandelColorPalettes}"
                                          SelectedValue="{Binding ElementName=MandelPlayground, Path=SelectedMandelColorPalette, Mode=TwoWay}"
                                          SelectedValuePath="Key" VerticalContentAlignment="Center"
                                          SelectionChanged="SetDisplaySelectionChanged">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value.Description}" ToolTip="{Binding Value.Tip}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <ComboBox Name="MandelColorFunctionComboBox" Margin="5" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                                          ItemsSource="{Binding ElementName=MandelPlayground, Path=MandelColorFunctions}"
                                          SelectedValue="{Binding ElementName=MandelPlayground, Path=SelectedMandelColorFunction, Mode=TwoWay}"
                                          SelectedValuePath="Key" VerticalContentAlignment="Center"
                                          SelectionChanged="SetDisplaySelectionChanged">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value.Description}" ToolTip="{Binding Value.Tip}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <xctk:IntegerUpDown Grid.Row="2" Grid.Column="1"
                                                   Name="SizeXUpDown" Margin="5" Minimum="100" Value="2000" Increment="10"/>
                                <xctk:IntegerUpDown Grid.Row="3" Grid.Column="1"
                                                   Name="SizeYUpDown" Margin="5" Minimum="100" Value="2000" Increment="10"/>
                                <xctk:DoubleUpDown Grid.Row="2" Grid.Column="3" ToolTip="Adjust the 'n' parameter for color functions that support it."
                                                   Name="NValueUpDown" Margin="5" Minimum="0" Value="0" Increment="0.1"
                                                   FormatString="F2" ValueChanged="SetDisplayValueChanged"/>
                                <xctk:DoubleUpDown Grid.Row="3" Grid.Column="3" ToolTip="Offset the start of the palette (-1 to 1)."
                                                   Name="PaletteOffsetUpDown" Margin="5" Minimum="-1" Value="0" Maximum="1" Increment="0.05"
                                                   FormatString="F2" ValueChanged="SetDisplayValueChanged"/>
                                <CheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" VerticalContentAlignment="Center" Margin="5"
                                          Content="Use Smooth Coloring" Name="UseColorSmoothingCheckbox"
                                          ToolTip="Calculate fractional iteration counts to smooth the iteration colors. Smooth Coloring is not supported for imaginary powers and certain iteration functions."
                                          Checked="SetDisplayCheckChanged" Unchecked="SetDisplayCheckChanged"/>
                                <xctk:IntegerUpDown Grid.Row="4" Grid.Column="3" ToolTip="If Smooth Coloring is enabled, applies extra iterations on calculated Z values to better estimate fractional iteration count. Warning: Breaks down on higher power fractals."
                                                   Name="SmoothingIterationsUpDown" Margin="5" Minimum="0" Value="3" Maximum="5" Increment="1"
                                                   ValueChanged="SetDisplayValueChanged"/>
                                <CheckBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" VerticalContentAlignment="Center" Margin="5"
                                          Content="Use Sine Interpolation" Name="UseSineInterpolationCheckbox"
                                          ToolTip="Applies Sine Interpolation to reduce the halo effect by smoothing color interpolation key points."
                                          Checked="SetDisplayCheckChanged" Unchecked="SetDisplayCheckChanged"/>
                                <xctk:DoubleUpDown Grid.Row="5" Grid.Column="3" ToolTip="Indicates how many times to loop forward and back through the color palette."
                                                   Name="InterpolationPeriodUpDown" Margin="5" Minimum="1" Value="1" Increment="0.5"
                                                   FormatString="F2" ValueChanged="SetDisplayValueChanged"/>
                                <CheckBox Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" VerticalContentAlignment="Center" Margin="5"
                                          Content="Apply Settings On Change" Name="UseInstantApplyCheckbox"
                                          ToolTip="Automatically applies display settings when changed (excluding Pixel resizes)."
                                          Checked="SetDisplayCheckChanged"/>
                                <StackPanel Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5"
                                            HorizontalAlignment="Center">
                                    <Button Content="Apply" Width="75" IsDefault="True" Height="25" Margin="0,0,10,0"
                                        HorizontalContentAlignment="Center" Click="SetDisplay_Apply_Click"/>
                                    <Button Content="OK" Width="75" IsDefault="True" Height="25"
                                        HorizontalContentAlignment="Center" Click="SetDisplay_OK_Click"/>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </Border>
                </Popup>
                <Popup Name="SetFunctionPopup" StaysOpen="True" PopupAnimation="Scroll"
                       Placement="Top" PlacementTarget="{Binding ElementName=SetFunctionPopupButton}">
                    <Border BorderBrush="Gray" BorderThickness="1" Width="350">
                        <DockPanel Background="AliceBlue">
                            <Grid Margin="5" Grid.IsSharedSizeScope="True" VerticalAlignment="Center">
                                <Grid.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="BOI"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition SharedSizeGroup="BOI"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35" SharedSizeGroup="YOMANYO"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO"/>
                                </Grid.RowDefinitions>
                                <Label Content="Function:" Grid.Row="0" Grid.Column="0"/>
                                <Label Content="Initial Iterations:" Grid.Row="1" Grid.Column="0"/>
                                <Label Content="Escape radius:" Grid.Row="1" Grid.Column="2"/>
                                <Label Content="Power Real:" Grid.Row="2" Grid.Column="0"/>
                                <Label Content="Power Imag:" Grid.Row="2" Grid.Column="2"/>
                                <Label Content="Z Real Offset:" Grid.Row="3" Grid.Column="0"/>
                                <Label Content="Z Imag Offset:" Grid.Row="3" Grid.Column="2"/>
                                <ComboBox Name="MandelFunctionComboBox" Margin="5" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3"
                                          ItemsSource="{Binding ElementName=MandelPlayground, Path=MandelFunctions}"
                                          SelectedValue="{Binding ElementName=MandelPlayground, Path=SelectedMandelFunction, Mode=TwoWay}"
                                          SelectedValuePath="Key" VerticalContentAlignment="Center">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value.Description}" ToolTip="{Binding Value.Tip}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1"
                                                   Name="InitIterationsUpDown" Margin="5" Minimum="1" Value="10" Increment="1"/>
                                <xctk:DoubleUpDown Grid.Row="1" Grid.Column="3"
                                                   Name="EscapeRadiusUpDown" Margin="5" Minimum="0" Value="2" Increment="0.1"/>
                                <xctk:DoubleUpDown Grid.Row="2" Grid.Column="1"
                                                   Name="PowerRealUpDown" Margin="5" Minimum="0" Value="2" Increment="1"/>
                                <xctk:DoubleUpDown Grid.Row="2" Grid.Column="3"
                                                   Name="PowerImagUpDown" Margin="5" Minimum="0" Value="0" Increment="1"/>
                                <xctk:DoubleUpDown Grid.Row="3" Grid.Column="1"
                                                   Name="ZRealUpDown" Margin="5" Value="0" Increment="0.01"/>
                                <xctk:DoubleUpDown Grid.Row="3" Grid.Column="3"
                                                   Name="ZImagUpDown" Margin="5" Value="0" Increment="0.01"/>
                                <StackPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4" Orientation="Horizontal" Margin="5"
                                            HorizontalAlignment="Center">
                                    <Button Content="Apply" Width="75" IsDefault="True" Height="25" Margin="0,0,10,0"
                                        HorizontalContentAlignment="Center" Click="SetFunction_Apply_Click"/>
                                    <Button Content="OK" Width="75" IsDefault="True" Height="25"
                                        HorizontalContentAlignment="Center" Click="SetFunction_OK_Click"/>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </Border>
                </Popup>
                <Popup Name="SetPositionPopup" StaysOpen="True" PopupAnimation="Scroll" IsOpen="False"
                       Placement="Top" PlacementTarget="{Binding ElementName=SetPositionPopupButton}">
                    <Border BorderBrush="Gray" BorderThickness="1" Width="300">
                        <DockPanel Background="AliceBlue">
                            <Grid Margin="5" Grid.IsSharedSizeScope="True" VerticalAlignment="Center">
                                <Grid.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="BOI3"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition SharedSizeGroup="BOI3"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35" SharedSizeGroup="YOMANYO3"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO3"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO3"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO3"/>
                                </Grid.RowDefinitions>
                                <Label Content="C Real:" Grid.Row="0" Grid.Column="0"/>
                                <Label Content="C Imag:" Grid.Row="1" Grid.Column="0"/>
                                <Label Content="Range:" Grid.Row="2" Grid.Column="0"/>
                                <Label Content="Zoom Factor:" Grid.Row="3" Grid.Column="0"/>
                                <xctk:DoubleUpDown Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" FormatString="G17"
                                                   Name="PositionRealUpDown" Margin="5" AutoSelectBehavior="Never"
                                                   ShowButtonSpinner="False" AllowSpin="False"/>
                                <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" FormatString="G17"
                                                   Name="PositionImagUpDown" Margin="5" AutoSelectBehavior="Never"
                                                   ShowButtonSpinner="False" AllowSpin="False"/>
                                <xctk:DoubleUpDown Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" FormatString="G17"
                                                   Name="PositionRangeUpDown" Margin="5" AutoSelectBehavior="Never"
                                                   ShowButtonSpinner="False" AllowSpin="False"/>
                                <xctk:DoubleUpDown Grid.Row="3" Grid.Column="1" ToolTip="Zoom factor when double clicking left/right to zoom in/out. Applies immediately."
                                                   Name="ZoomFactorUpDown" Margin="5" Value="{Binding ElementName=MandelPlayground, Path=ZoomFactor}"
                                                   Minimum="1" Maximum="10" Increment="0.1" FormatString="F2"/>
                                <StackPanel Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5"
                                            HorizontalAlignment="Center">
                                    <!--<Button Content="Close" Width="60" IsDefault="True" Height="25" Margin="0,0,10,0"
                                        HorizontalContentAlignment="Center" Click="SetPosition_Close_Click"/>-->
                                    <Button Content="Apply" Width="60" IsDefault="True" Height="25" Margin="0,0,10,0"
                                        HorizontalContentAlignment="Center" Click="SetPosition_Apply_Click"/>
                                    <Button Content="OK" Width="60" IsDefault="True" Height="25"
                                        HorizontalContentAlignment="Center" Click="SetPosition_OK_Click"/>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </Border>
                </Popup>
                <Popup Name="SaveLoadPopup" StaysOpen="True" PopupAnimation="Scroll"
                       Placement="Top" PlacementTarget="{Binding ElementName=SaveLoadButton}">
                    <Border BorderBrush="Gray" BorderThickness="1" Width="125">
                        <DockPanel Background="AliceBlue">
                            <Grid Margin="5" Grid.IsSharedSizeScope="True" VerticalAlignment="Center">
                                <Grid.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" SharedSizeGroup="YOMANYO4"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO4"/>
                                    <RowDefinition SharedSizeGroup="YOMANYO4"/>
                                </Grid.RowDefinitions>
                                <Button Content="Save To Image" IsDefault="True" Height="25" Grid.Row="0"
                                        HorizontalContentAlignment="Center" Click="SaveImage_Click"
                                        ToolTip="Saves the current render to an image file."/>
                                <Button Content="Save To Json" IsDefault="True" Height="25" Grid.Row="1"
                                        HorizontalContentAlignment="Center" Click="SaveJson_Click"
                                        ToolTip="Saves the settings used to compute the current render to a text file."/>
                                <Button Content="Load From Json" IsDefault="True" Height="25" Grid.Row="2"
                                        HorizontalContentAlignment="Center" Click="LoadJson_Click"
                                        ToolTip="Loads computation settings from a text file."/>
                            </Grid>
                        </DockPanel>
                    </Border>
                </Popup>
            </StatusBar>
        </DockPanel>
        <Image Name="MandelImage" MouseDown="MandelImage_MouseDown" Cursor="Cross"/>
    </DockPanel>
</Window>
